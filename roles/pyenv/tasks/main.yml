---
- name: install dependencies in CentOS
  sudo: yes
  yum: name={{item}} state=latest
  with_items:
    - openssl-devel
    - readline-devel
    - zlib-devel
    - bzip2-devel
    - sqlite-devel
  when: ansible_distribution == 'CentOS'

- name: install dependencies in Debian family
  sudo: yes
  apt: name={{item}} state=latest
  with_items:
    - make
    - build-essential
    - libssl-dev
    - zlib1g-dev
    - libbz2-dev
    - libreadline-dev
    - libsqlite3-dev
    - wget
    - curl
    - llvm
    - libncurses5-dev
  when: ansible_os_family == 'Debian'

- name: install pyenv
  sudo: yes
  git: repo=https://github.com/yyuu/pyenv.git dest={{pyenv_root}}

- name: make pyenv group
  sudo: yes
  group: name=pyenv

- name: set pyenv env file
  sudo: yes
  template: >
    src=pyenv.sh.j2
    dest=/etc/profile.d/pyenv.sh
    mode=644
    group=pyenv

- name: change attributes of {{pyenv_root}}
  sudo: yes
  file:
    path: "{{pyenv_root}}"
    mode: g+rwXs
    group: pyenv
    state: directory
    recurse: yes

- name: install virtualenv as pyenv plugin
  sudo: yes
  git: >
    repo=https://github.com/yyuu/pyenv-virtualenv.git
    dest={{pyenv_root}}/plugins/pyenv-virtualenv

- name: add user to pyenv group
  sudo: yes
  user: name={{pyenv_user}} append=yes groups=pyenv

- name: check whether python was already installed or not
  shell: /bin/bash -lc 'pyenv global {{python_version}}'
  ignore_errors: yes
  register: result

- name: install python with pyenv
  shell: /bin/bash -lc 'pyenv install {{python_version}}'
  when: result|failed

- name: set python {{python_version}} for system
  shell: /bin/bash -lc 'pyenv global {{python_version}} && pyenv rehash'
  when: result|failed
